/**
 *  Do not remove the comment below. It's the markers used by wiredep to inject
 *  sass dependencies when defined in the bower.json of your dependencies
 */
@font-face {
  font-family: 'Material Icons';
  font-style: normal;
  font-weight: 400;
  src: url(../assets/fonts/MaterialIcons-Regular.eot);
  /* For IE6-8 */
  src: local("Material Icons"), local("MaterialIcons-Regular"), url(../assets/fonts/MaterialIcons-Regular.woff2) format("woff2"), url(../assets/fonts/MaterialIcons-Regular.woff) format("woff"), url(../assets/fonts/MaterialIcons-Regular.ttf) format("truetype"); }

.material-icons {
  font-family: 'Material Icons';
  font-weight: normal;
  font-style: normal;
  font-size: 24px;
  /* Preferred icon size */
  display: inline-block;
  width: 1em;
  height: 1em;
  line-height: 1;
  text-transform: none;
  letter-spacing: normal;
  word-wrap: normal;
  /* Support for all WebKit browsers. */
  -webkit-font-smoothing: antialiased;
  /* Support for Safari and Chrome. */
  text-rendering: optimizeLegibility;
  /* Support for Firefox. */
  -moz-osx-font-smoothing: grayscale;
  /* Support for IE. */
  -webkit-font-feature-settings: 'liga';
          font-feature-settings: 'liga'; }

.required-field {
  color: #ff2323; }

/**
 *  Do not remove the comment below. It's the markers used by gulp-inject to inject
 *  all your sass files automatically
 */
.builder-components::before, .builder-components::after {
  content: '';
  max-width: 100%;
  height: 4rem;
  border: 1px dashed #cecece;
  background-color: rgba(255, 135, 135, 0.15);
  display: none; }

.builder-components.before::before {
  display: block; }

.builder-components.after::after {
  display: block; }

.droppable-copy-drag-item.drag .builder-components.before::before, .droppable-copy-drag-item.drag .builder-components.after::after {
  display: none; }

#__formBuilderForm {
  min-height: 10rem;
  max-height: 100%;
  padding: 4px; }
  #__formBuilderForm.over {
    border: 1px dotted rgba(255, 135, 135, 0.5); }
  #__formBuilderForm .droppable-copy-drag-item {
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
    user-drag: element; }

.datepicker-errors-advanced .disabled {
  color: rgba(0, 0, 0, 0.26); }

.datepicker-errors-advanced .hint {
  /* Position the hint */
  position: absolute;
  left: 12px;
  right: auto;
  bottom: 0px;
  /* Copy styles from ng-messages */
  font-size: 12px;
  line-height: 14px;
  -webkit-transition: all 0.3s cubic-bezier(0.55, 0, 0.55, 0.2);
  transition: all 0.3s cubic-bezier(0.55, 0, 0.55, 0.2);
  /* Set our own color */
  color: grey; }
  .datepicker-errors-advanced .hint.ng-hide, .datepicker-errors-advanced .hint.ng-enter, .datepicker-errors-advanced .hint.ng-leave.ng-leave-active {
    bottom: 26px;
    opacity: 0; }
  .datepicker-errors-advanced .hint.ng-leave, .datepicker-errors-advanced .hint.ng-enter.ng-enter-active {
    bottom: 7px;
    opacity: 1; }

.input-errors-advanced .__uploader-drag-and-drop {
  border: 1px dotted #cecece;
  margin-top: 0.3rem;
  margin-bottom: 0.3rem;
  padding: 2rem 1rem; }

.input-errors-advanced .hint.uploader {
  position: relative;
  bottom: 2px;
  left: 6px; }

.input-errors-advanced .prepare-upload-file {
  border: 1px solid #ececec;
  border-radius: 5px;
  margin-top: 0.2rem; }
  .input-errors-advanced .prepare-upload-file .preview-image {
    display: block;
    margin: 0.5rem;
    padding: 5px;
    background: #ececec;
    border-radius: 5px; }

[draggable-item] .form-builder-file-uploader,
[droppable-item] .form-builder-file-uploader {
  display: none; }

.checkbox-errors-advanced .disabled {
  color: rgba(0, 0, 0, 0.26); }

.checkbox-errors-advanced .hint {
  /* Position the hint */
  position: absolute;
  left: 12px;
  right: auto;
  bottom: 0px;
  /* Copy styles from ng-messages */
  font-size: 12px;
  line-height: 14px;
  -webkit-transition: all 0.3s cubic-bezier(0.55, 0, 0.55, 0.2);
  transition: all 0.3s cubic-bezier(0.55, 0, 0.55, 0.2);
  /* Set our own color */
  color: grey; }
  .checkbox-errors-advanced .hint.ng-hide, .checkbox-errors-advanced .hint.ng-enter, .checkbox-errors-advanced .hint.ng-leave.ng-leave-active {
    bottom: 26px;
    opacity: 0; }
  .checkbox-errors-advanced .hint.ng-leave, .checkbox-errors-advanced .hint.ng-enter.ng-enter-active {
    bottom: 7px;
    opacity: 1; }

.radio-errors-advanced .disabled {
  color: rgba(0, 0, 0, 0.26); }

.radio-errors-advanced .hint {
  /* Position the hint */
  position: absolute;
  left: 12px;
  right: auto;
  bottom: 2px;
  /* Copy styles from ng-messages */
  font-size: 12px;
  line-height: 14px;
  -webkit-transition: all 0.3s cubic-bezier(0.55, 0, 0.55, 0.2);
  transition: all 0.3s cubic-bezier(0.55, 0, 0.55, 0.2);
  /* Set our own color */
  color: grey; }
  .radio-errors-advanced .hint.ng-hide, .radio-errors-advanced .hint.ng-enter, .radio-errors-advanced .hint.ng-leave.ng-leave-active {
    bottom: 26px;
    opacity: 0; }
  .radio-errors-advanced .hint.ng-leave, .radio-errors-advanced .hint.ng-enter.ng-enter-active {
    bottom: 7px;
    opacity: 1; }

.input-errors-advanced .disabled {
  color: rgba(0, 0, 0, 0.26); }

.input-errors-advanced .hint {
  /* Position the hint */
  position: absolute;
  left: 12px;
  right: auto;
  bottom: 7px;
  /* Copy styles from ng-messages */
  font-size: 12px;
  line-height: 14px;
  -webkit-transition: all 0.3s cubic-bezier(0.55, 0, 0.55, 0.2);
  transition: all 0.3s cubic-bezier(0.55, 0, 0.55, 0.2);
  /* Set our own color */
  color: grey; }
  .input-errors-advanced .hint.ng-hide, .input-errors-advanced .hint.ng-enter, .input-errors-advanced .hint.ng-leave.ng-leave-active {
    bottom: 26px;
    opacity: 0; }
  .input-errors-advanced .hint.ng-leave, .input-errors-advanced .hint.ng-enter.ng-enter-active {
    bottom: 7px;
    opacity: 1; }

.md-input-invalid .hint {
  display: none; }

.select-errors-advanced .hint {
  /* Position the hint */
  position: absolute;
  left: 12px;
  right: auto;
  bottom: -12px;
  /* Copy styles from ng-messages */
  font-size: 12px;
  line-height: 14px;
  -webkit-transition: all 0.3s cubic-bezier(0.55, 0, 0.55, 0.2);
  transition: all 0.3s cubic-bezier(0.55, 0, 0.55, 0.2);
  /* Set our own color */
  color: grey; }
  .select-errors-advanced .hint.ng-hide, .select-errors-advanced .hint.ng-enter, .select-errors-advanced .hint.ng-leave.ng-leave-active {
    bottom: 26px;
    opacity: 0; }
  .select-errors-advanced .hint.ng-leave, .select-errors-advanced .hint.ng-enter.ng-enter-active {
    bottom: 7px;
    opacity: 1; }

.switch-errors-advanced .disabled {
  color: rgba(0, 0, 0, 0.26); }

.switch-errors-advanced .hint {
  /* Position the hint */
  position: absolute;
  left: 12px;
  right: auto;
  bottom: 0px;
  /* Copy styles from ng-messages */
  font-size: 12px;
  line-height: 14px;
  -webkit-transition: all 0.3s cubic-bezier(0.55, 0, 0.55, 0.2);
  transition: all 0.3s cubic-bezier(0.55, 0, 0.55, 0.2);
  /* Set our own color */
  color: grey; }
  .switch-errors-advanced .hint.ng-hide, .switch-errors-advanced .hint.ng-enter, .switch-errors-advanced .hint.ng-leave.ng-leave-active {
    bottom: 26px;
    opacity: 0; }
  .switch-errors-advanced .hint.ng-leave, .switch-errors-advanced .hint.ng-enter.ng-enter-active {
    bottom: 7px;
    opacity: 1; }

.textarea-errors-advanced .disabled {
  color: rgba(0, 0, 0, 0.26); }

.textarea-errors-advanced .md-textarea {
  min-height: 5rem !important; }

.textarea-errors-advanced .md-errors-spacer {
  color: rgba(0, 0, 0, 0.26); }

.textarea-errors-advanced .hint {
  /* Position the hint */
  position: absolute;
  left: 6px;
  right: auto;
  bottom: 12px;
  /* Copy styles from ng-messages */
  font-size: 12px;
  line-height: 14px;
  -webkit-transition: all 0.3s cubic-bezier(0.55, 0, 0.55, 0.2);
  transition: all 0.3s cubic-bezier(0.55, 0, 0.55, 0.2);
  /* Set our own color */
  color: grey; }
  .textarea-errors-advanced .hint.ng-hide, .textarea-errors-advanced .hint.ng-enter, .textarea-errors-advanced .hint.ng-leave.ng-leave-active {
    bottom: 26px;
    opacity: 0; }
  .textarea-errors-advanced .hint.ng-leave, .textarea-errors-advanced .hint.ng-enter.ng-enter-active {
    bottom: 7px;
    opacity: 1; }

/*# sourceMappingURL=data:application/json;base64, */
